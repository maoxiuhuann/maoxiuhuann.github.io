<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ctfshow愚人杯WP</title>
      <link href="/post/25de191f.html"/>
      <url>/post/25de191f.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目一：热身"><a href="#题目一：热身" class="headerlink" title="题目一：热身"></a>题目一：热身</h2><p>打开题目即得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518213312.png" alt="Snipaste_2023-04-01_12-59-11"></p><h2 id="题目二：easybase"><a href="#题目二：easybase" class="headerlink" title="题目二：easybase"></a>题目二：easybase</h2><p>确实是ezbase，解密两次得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518213419.png" alt="Snipaste_2023-04-01_12-17-06"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518213421.png" alt="Snipaste_2023-04-01_12-17-28"></p><h2 id="题目三：奇怪的压缩包"><a href="#题目三：奇怪的压缩包" class="headerlink" title="题目三：奇怪的压缩包"></a>题目三：奇怪的压缩包</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>打开压缩包，显示有密码，并且没有提示</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518214500.png" alt="Snipaste_2023-04-01_12-42-51"></p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>用010editor打开，没有发现压缩密码相关信息，但是发现压缩包是伪加密，修改后成功解压缩</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518214620.png" alt="Snipaste_2023-04-01_12-43-19"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518214623.png" alt="Snipaste_2023-04-01_12-43-32"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518214625.png" alt="Snipaste_2023-04-01_12-43-41"></p><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>得到black.png用010editor打开收集信息，判断出png文件包含了zip文件并且给出了密码</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518215954.png" alt="image-20230518215953855"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518220027.png" alt="Snipaste_2023-04-01_12-53-35"><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518220029.png" alt="Snipaste_2023-04-01_12-54-48"><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518220025.png" alt="Snipaste_2023-04-01_12-49-53"></p><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>分离出zip文件，解压出flag.txt，发现flag应该在下面，修改图片高度，或者找到字符串即可得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518223041.png" alt="image-20230518223040020"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518223109.png" alt="image-20230518223108871"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518223121.png" alt="image-20230518223120085"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230518223141.png" alt="Snipaste_2023-04-01_12-58-16"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Misc学习做题(1)</title>
      <link href="/post/34e46058.html"/>
      <url>/post/34e46058.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>邮差总按两遍铃</title>
      <link href="/post/90036a89.html"/>
      <url>/post/90036a89.html</url>
      
        <content type="html"><![CDATA[<p><strong>精彩的侦探小说！让我一个晚上就读完了，语言简洁直白、通俗易懂。故事大概讲述了一名流浪汉爱上了偏远小旅馆老板的妻子，他们通奸并准备杀害老板，远走高飞，在第一次谋杀失败并搪塞过去后，他们筹划了第二次谋杀并最终得手，他们被法院询问差点要承认罪行，可在律师的帮助下无罪释放，在经历一系列波折后，他们开始不信任彼此甚至想要杀害对方，最后他们和解，最后却因为一次真正的车祸女主角怀着生孕而死去，男主也因为女主的一张忘记丢弃的便条被判处死刑。文章的名称虽然有关邮差，但全文没有出现过邮差，然而“总”字十分贴切，失败之后是成功，成功过后是失败，命运的玩笑就在“总”字上，颇有种福无双至，祸不单行的韵味。有趣的是，前期男女主角两人真心相爱，信任彼此，在被法院审问的过程中渐渐丧失了对彼此的信任，最后盘算对方是否会想要杀死自己并为此做好了准备，浓浓的黑色幽默。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>白夜</title>
      <link href="/post/1576ed76.html"/>
      <url>/post/1576ed76.html</url>
      
        <content type="html"><![CDATA[<p><strong>写在开头:感觉这个月买的都是小说集呀，明明以为是长篇小说的。总是感觉到注意力不集中了，老是想着要玩游戏，打篮球啥的，阅读的时间也不规律起来了，道阻且长。</strong><br><strong>这本书包含了三篇文章。《穷人》以相互书信的格式讲述了年迈的主人公对女主视如己出，爱的深沉，最后却不得不迫于生活的压力失去了她的故事。正如书名，文章展示了穷人生活的窘迫无奈:两个穷人互相关心却往往无法自足，迫于生活压力预支薪水而陷入恶性循环，真心希望对方辛福而又不得不收到别人恶意揣测，老实勤奋却无端遭受攻击……《白夜》是自认为“幻想家”的男主偶然间遇到等待爱情的女主，男主爱上了她并决定等待看最终的结果，最后在女主等待未果失望说要跟随男主时，女主等待的人出现了，而女主还是深爱着他，并离开了男主。篇幅不长，故事也很简短，但男主对女主的爱相当浓烈，俄国人表达爱意的方式开放而直白，但女主也是及其深情，对爱人忠贞而深刻。《赌徒》中对赌徒心态的详尽描写绝对值得一看。主人公因为爱情而沾上了赌博，第一次赌便有了“我一定能赢钱”的信念，在后续剧情中，老太太赢钱又输钱，最后想着翻本而失去9万卢布的案例已经是前车之鉴，但男主在为了心爱之人赢得20万卢布之后成为了彻彻底底的赌徒，他最终没能得到爱人的心而任由别人挥霍他的钱财，最后一无所有，将所有得到的钱财都拿去赌博，最后从朋友那边得知心爱之人曾爱过没有粘上赌博的他，并接受了朋友的金钱，可他却无力再改变自己，依旧希望靠赌博翻身……其中精彩的细节心理描写深刻揭露出赌徒心理，也让我告诫自己一定不要粘上赌博。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF Pwn学习做题(1)</title>
      <link href="/post/4e394a54.html"/>
      <url>/post/4e394a54.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目一：get-shell"><a href="#题目一：get-shell" class="headerlink" title="题目一：get_shell"></a>题目一：get_shell</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>最简单的pwn题目，nc一下，打开flag文件即可</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230330121237.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230330121242.png"></p><h2 id="题目二：test-your-nc"><a href="#题目二：test-your-nc" class="headerlink" title="题目二：test_your_nc"></a>题目二：test_your_nc</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1."></a>1.</h3><p>也是基础pwn题目，解题过程和第一题一样</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230330121927.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230330121934.png"></p><p>由于初学pwn，接下来的两道题目都是一知半解，是跟着老师的步骤做出来的</p><h2 id="题目三：hello-pwn"><a href="#题目三：hello-pwn" class="headerlink" title="题目三：hello_pwn"></a>题目三：hello_pwn</h2><h3 id="1-2"><a href="#1-2" class="headerlink" title="1."></a>1.</h3><p>打开程序，拖进ida分析，查看if函数的成立条件</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230416174210.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230416174224.png"></p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>将最后四个字符改为aaun即可得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230416174349.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230416174356.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230416174402.png"></p><h2 id="题目四：pwn1"><a href="#题目四：pwn1" class="headerlink" title="题目四：pwn1"></a>题目四：pwn1</h2><h3 id="1-3"><a href="#1-3" class="headerlink" title="1."></a>1.</h3><p>打开程序拖入ida分析</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230416175118.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230416175125.png"></p><h3 id="2-1"><a href="#2-1" class="headerlink" title="2."></a>2.</h3><p>构造exp，cat flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230416175156.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230416175202.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230416175210.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Pwn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Pwn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Reverse学习做题(1)</title>
      <link href="/post/6db44a7b.html"/>
      <url>/post/6db44a7b.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目一：babyre"><a href="#题目一：babyre" class="headerlink" title="题目一：babyre"></a>题目一：babyre</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>简单re，查壳后用IDA打开可发现flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329104607.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329104617.png"></p><h2 id="题目二：re1"><a href="#题目二：re1" class="headerlink" title="题目二：re1"></a>题目二：re1</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1."></a>1.</h3><p>查壳后用IDA打开，按下按下 Shift + F12打开字符串窗口，搜索有关信息得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329104856.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329104908.png"></p><h2 id="题目三：game"><a href="#题目三：game" class="headerlink" title="题目三：game"></a>题目三：game</h2><h3 id="1-2"><a href="#1-2" class="headerlink" title="1."></a>1.</h3><p>打开程序会出现一个小游戏，按照规则完成游戏得到flag（因为先尝试完成游戏得到了flag就没有用逆向完成）</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329105112.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329105122.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329105132.png"></p><h2 id="题目四：easyre"><a href="#题目四：easyre" class="headerlink" title="题目四：easyre"></a>题目四：easyre</h2><h3 id="1-3"><a href="#1-3" class="headerlink" title="1."></a>1.</h3><p>如题目简单re，查壳后IDA打开查找一下可得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329105330.png" alt="Snipaste_2023-03-06_16-47-21"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329105344.png"></p><p>以下两题由于刚刚学习re无法解出，根据书上的内容一步步来得到的答案，在此记录一下</p><h2 id="题目五：UPX脱壳-修改跳转"><a href="#题目五：UPX脱壳-修改跳转" class="headerlink" title="题目五：UPX脱壳+修改跳转"></a>题目五：UPX脱壳+修改跳转</h2><h3 id="1-4"><a href="#1-4" class="headerlink" title="1."></a>1.</h3><p>先查壳，本来这题应该有UPX加壳，但是老师给的版本没有，更加简单一点</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329110036.png"></p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>双击运行，尝试输入密码，直接退出程序（忘记截图）</p><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>将程序拖入IDA进行分析，F5反编译发现只有一个简单main函数，字符串搜素也无法找到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329110332.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329110338.png"></p><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3><p>将程序放入OD中调试，查找程序刚运行出现的关键字，双击到相应区域，放置光标，按F4运行到光标处</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329111018.png"></p><h3 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h3><p>按F8进行单步向下执行，找到关键代码0040495F，此处地址的对比会导致跳转。而这里的跳转条件恒成立，因此无论输入什么都无法得到flag值</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329111336.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329111355.png"></p><h3 id="6"><a href="#6" class="headerlink" title="6."></a>6.</h3><p>想到修改跳转或直接略过跳转，这里简单的将跳转目的地址改为下方相邻的指令地址。多次F8单步执行后可得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329111545.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329111558.png"></p><h2 id="题目六：反调试"><a href="#题目六：反调试" class="headerlink" title="题目六：反调试"></a>题目六：反调试</h2><h3 id="1-5"><a href="#1-5" class="headerlink" title="1."></a>1.</h3><p>查壳后拖进IDA进行调试，F5反编译，发现程序会进行反调试，静态分析难度较大，于是使用OD进行动态调试</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329120106.png"></p><h3 id="2-1"><a href="#2-1" class="headerlink" title="2."></a>2.</h3><p>下断点到反调试开始的地方，修改跳转je为jnz直接跳过进行判断的地方</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329120459.png"></p><h3 id="3-1"><a href="#3-1" class="headerlink" title="3."></a>3.</h3><p>找到main函数入口，下断点，F9跳过去进行单步执行，打印出一个解密循环，因为已经绕过了反编译，我们需要做的就是控制下面两个je不会跳转，这样会再打印出一段flag信息</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329120742.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329120756.png"></p><h3 id="4-1"><a href="#4-1" class="headerlink" title="4."></a>4.</h3><p>继续F8单步向下，会发现下面有三个函数，F7进入第一个函数，发现输出字符串的操作被跳过，我们修改不让它跳转，又得到一部分字符串</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329121425.png"></p><h3 id="5-1"><a href="#5-1" class="headerlink" title="5."></a>5.</h3><p>在进入下一个call可以看到rdtsc命令，这是用于保存时间的指令。这里是基于时间的反调试，可以直接在下面的popad处下断点，然后用F9之家跳过，之后可以找到解密循环，又得到一部分flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329121659.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329121717.png"></p><h3 id="6-1"><a href="#6-1" class="headerlink" title="6."></a>6.</h3><p>进入最后一个call，我们可以看到一个get函数并且下面的跳过绕过了print函数，我们先随便输入一些内容，再不让它跳转，最后得到了flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329121934.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329121945.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230329121958.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修道院纪事</title>
      <link href="/post/403fb2c7.html"/>
      <url>/post/403fb2c7.html</url>
      
        <content type="html"><![CDATA[<p><strong>想购买这本书的原因是听说足以媲美《百年孤独》，看完感觉没有那种文字的大道至简的美感，但语言灵动也值得一看。故事讲述了在战争中失去了左手的“七个太阳”和有超常视力的“七个月亮”的经历的一系列故事，神父飞行家，宗教迫害，建造修道院，“女飞行家”寻找丈夫……根据作者描述的场景，这是一个宗教控制意志，抵制科学进步发展的时代，修士们自诩圣洁却总做出魔鬼的行为，教会迫害进步的思想家，欺骗国王以谋取利益，国王畏惧死亡又强行启动基本不可能完成的任务，国与国的交往以牺牲子女并不情愿的联姻为代价，想安居乐业的人民又为国王的欲望而劳苦甚至死亡……揭露了当时社会的愚昧黑暗，是了解当时社会风情的最好参照。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-Crypto学习做题(1)</title>
      <link href="/post/66a4d991.html"/>
      <url>/post/66a4d991.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目一：-bash"><a href="#题目一：-bash" class="headerlink" title="题目一：@bash"></a>题目一：@bash</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>根据题目提示可知考察埃特巴士码，解密得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322110822.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322110831.png"></p><h2 id="题目二：0x36d"><a href="#题目二：0x36d" class="headerlink" title="题目二：0x36d"></a>题目二：0x36d</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1."></a>1.</h3><p>打开题目是一串颜文字，可知base100加密，可是普通的base100解密网站无法解密成功，之前没有见过这样的题目，根据提示可知应该是需要使用密码的base100解密</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322111217.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322111342.png"></p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>在网上看了别人的WP找到了解密网站，解密成功。</p><p>原帖链接：<a href="https://blog.csdn.net/m0_64815693/article/details/127835745">https://blog.csdn.net/m0_64815693/article/details/127835745</a>   </p><p>解密网站链接：<a href="https://txtmoji.com/">https://txtmoji.com/</a></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322111434.png"></p><h2 id="题目三：密码签到"><a href="#题目三：密码签到" class="headerlink" title="题目三：密码签到"></a>题目三：密码签到</h2><h3 id="1-2"><a href="#1-2" class="headerlink" title="1."></a>1.</h3><p>简单的签到题，16进制解密得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223020.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223032.png"></p><h2 id="题目四：base64"><a href="#题目四：base64" class="headerlink" title="题目四：base64"></a>题目四：base64</h2><h3 id="1-3"><a href="#1-3" class="headerlink" title="1."></a>1.</h3><p>简单的base64解密即可得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223046.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223058.png"></p><h2 id="题目五：broadcast"><a href="#题目五：broadcast" class="headerlink" title="题目五：broadcast"></a>题目五：broadcast</h2><h3 id="1-4"><a href="#1-4" class="headerlink" title="1."></a>1.</h3><p>下载附件，打开py文件查看源代码得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223111.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223129.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223138.png"></p><h2 id="题目六：Caesar"><a href="#题目六：Caesar" class="headerlink" title="题目六：Caesar"></a>题目六：Caesar</h2><h3 id="1-5"><a href="#1-5" class="headerlink" title="1."></a>1.</h3><p>简单恺撒密码，解密工具解密得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223208.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223237.png"></p><h3 id="题目七：crypto垃圾邮箱"><a href="#题目七：crypto垃圾邮箱" class="headerlink" title="题目七：crypto垃圾邮箱"></a>题目七：crypto垃圾邮箱</h3><h3 id="1-6"><a href="#1-6" class="headerlink" title="1."></a>1.</h3><p>之前没有接触过这样的题目，网上收集信息发现有专门的网站解密此类垃圾邮箱</p><p>解密网址：<a href="https://www.spammimic.com/decode.cgi">https://www.spammimic.com/decode.cgi</a></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223311.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322222929.png"></p><h2 id="题目八：morse"><a href="#题目八：morse" class="headerlink" title="题目八：morse"></a>题目八：morse</h2><h3 id="1-7"><a href="#1-7" class="headerlink" title="1."></a>1.</h3><p>简单莫斯密码：1代表’’-‘’,0代表’’·’’，解密后可得到flag</p><p>解码网站：<a href="http://www.all-tool.cn/Tools/morse/">http://www.all-tool.cn/Tools/morse/</a></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223631.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223644.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322223652.png"></p><h2 id="题目九：Railfence"><a href="#题目九：Railfence" class="headerlink" title="题目九：Railfence"></a>题目九：Railfence</h2><h3 id="1-8"><a href="#1-8" class="headerlink" title="1."></a>1.</h3><p>题目意思为栅栏，可知应该是栅栏密码，尝试了正常的栅栏密码无法得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322224333.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322224342.png"></p><h3 id="2-1"><a href="#2-1" class="headerlink" title="2."></a>2.</h3><p>搜查资料知道还有W型的栅栏加密，尝试到栏数为5得到flag</p><p>解密网站：<a href="http://www.atoolbox.net/Tool.php?Id=777">http://www.atoolbox.net/Tool.php?Id=777</a></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322224701.png"></p><h2 id="题目十：不仅仅是Morse"><a href="#题目十：不仅仅是Morse" class="headerlink" title="题目十：不仅仅是Morse"></a>题目十：不仅仅是Morse</h2><h3 id="1-9"><a href="#1-9" class="headerlink" title="1."></a>1.</h3><p>根据题目提示应该是摩斯密码和另一种密码的结合，解密摩斯密码后发现培根密码的特征，二次解密得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322224921.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322224930.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322224939.png"></p><h2 id="题目十一：告诉你个秘密"><a href="#题目十一：告诉你个秘密" class="headerlink" title="题目十一：告诉你个秘密"></a>题目十一：告诉你个秘密</h2><h3 id="1-10"><a href="#1-10" class="headerlink" title="1."></a>1.</h3><p>打开题目进行16进制解密，但是尝试了很多网站都无法完整解密，问了同学使用了六角解密可以解密</p><p>六角转换解密网址：<a href="https://www.convertstring.com/zh_CN/EncodeDecode/HexDecode">https://www.convertstring.com/zh_CN/EncodeDecode/HexDecode</a></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322225343.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322225435.png"></p><h3 id="2-2"><a href="#2-2" class="headerlink" title="2."></a>2.</h3><p>将解密后的信息进行base64解密</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322225527.png"></p><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>尝试了很多种解密方式均无结果，最后在书上看到了类似的题目，原来是这些字母在键盘上围成的字母！</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322225743.png"></p><h2 id="题目十二：类型-7"><a href="#题目十二：类型-7" class="headerlink" title="题目十二：类型-7"></a>题目十二：类型-7</h2><h3 id="1-11"><a href="#1-11" class="headerlink" title="1."></a>1.</h3><p>之前没见过这样的题目，学习到了type-7加密</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322225911.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322225921.png"></p><h2 id="题目十三：轮转机加密"><a href="#题目十三：轮转机加密" class="headerlink" title="题目十三：轮转机加密"></a>题目十三：轮转机加密</h2><h3 id="1-12"><a href="#1-12" class="headerlink" title="1."></a>1.</h3><p>学习了一种新的加密方式，按照密钥顺序排列字符，并将密文字母放置在第一列，找到有实际意义的一列字符即为flag，也可以编写脚本实现排列</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322230249.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encode=utf-8</span></span><br><span class="line">table_list = [</span><br><span class="line">    <span class="string">&quot;ZWAXJGDLUBVIQHKYPNTCRMOSFE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;KPBELNACZDTRXMJQOYHGVSFUWI&quot;</span>,</span><br><span class="line">    <span class="string">&quot;BDMAIZVRNSJUWFHTEQGYXPLOCK&quot;</span>,</span><br><span class="line">    <span class="string">&quot;RPLNDVHGFCUKTEBSXQYIZMJWAO&quot;</span>,</span><br><span class="line">    <span class="string">&quot;IHFRLABEUOTSGJVDKCPMNZQWXY&quot;</span>,</span><br><span class="line">    <span class="string">&quot;AMKGHIWPNYCJBFZDRUSLOQXVET&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GWTHSPYBXIZULVKMRAFDCEONJQ&quot;</span>,</span><br><span class="line">    <span class="string">&quot;NOZUTWDCVRJLXKISEFAPMYGHBQ&quot;</span>,</span><br><span class="line">    <span class="string">&quot;XPLTDSRFHENYVUBMCQWAOIKZGJ&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UDNAJFBOWTGVRSCZQKELMXYIHP&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MNBVCXZQWERTPOIUYALSKDJFHG&quot;</span>,</span><br><span class="line">    <span class="string">&quot;LVNCMXZPQOWEIURYTASBKJDFHG&quot;</span>,</span><br><span class="line">    <span class="string">&quot;JZQAWSXCDERFVBGTYHNUMKILOP&quot;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">index = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="number">13</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">4</span>, <span class="number">11</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line">first_chr = [<span class="string">&quot;NFQKSEVOQOFNP&quot;</span>]</span><br><span class="line"></span><br><span class="line">table_list_re_index = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> index:</span><br><span class="line">    table_list_re_index.append(table_list[i-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">table_result = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(index)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(table_list_re_index[i])):</span><br><span class="line">        <span class="keyword">if</span> table_list_re_index[i][j] ==  first_chr[<span class="number">0</span>][i]:</span><br><span class="line">            tmp = table_list_re_index[i][j:] + table_list_re_index[i][<span class="number">0</span>:j]</span><br><span class="line">            table_result.append(tmp)</span><br><span class="line">            <span class="keyword">break</span> <span class="comment"># 第一次匹配成功就结束</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">            </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(table_result)):</span><br><span class="line">    <span class="built_in">print</span>(table_result[i])</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322230414.png"></p><h2 id="题目十四：幂数加密"><a href="#题目十四：幂数加密" class="headerlink" title="题目十四：幂数加密"></a>题目十四：幂数加密</h2><h3 id="1-13"><a href="#1-13" class="headerlink" title="1."></a>1.</h3><p>学习幂数加密，但是幂数加密只含有0，1，2，3，4，5，题目中含有8</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322230647.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322230710.png"></p><h3 id="2-3"><a href="#2-3" class="headerlink" title="2."></a>2.</h3><p>搜索看到一种加密方式符合题目，按照规则对照字母表可以得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230322230847.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF WEB学习做题(1)</title>
      <link href="/post/f2c4d3c5.html"/>
      <url>/post/f2c4d3c5.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目一：Where-is-flag"><a href="#题目一：Where-is-flag" class="headerlink" title="题目一：Where is flag"></a>题目一：Where is flag</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>打开题目发现网页就是标题“where is the flag”没有其他信息</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/202303192034670.png"></p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>右键查看网页源代码，发现flag信息</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319225027.png"></p><h2 id="题目二：Training-WWW-Robots"><a href="#题目二：Training-WWW-Robots" class="headerlink" title="题目二：Training-WWW-Robots"></a>题目二：Training-WWW-Robots</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1."></a>1.</h3><p> 进入题目场景发现一段话，翻译后：在这个小小的训练挑战中，您将学习Robots_exclusion_标准。robots.txt文件被网络爬虫用来检查他们是否被允许对您的网站或其部分进行爬网和索引。有时这些文件会显示目录结构，而不是保护内容不被爬网。          应该是考察robots.txt</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319230443.png"></p><h3 id="2-1"><a href="#2-1" class="headerlink" title="2."></a>2.</h3><p>输入&#x2F;robots.txt,可以看见fl0g.php文件</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231049.png"></p><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><p>输入&#x2F;fl0g.php，打开文件得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231100.png"></p><h2 id="题目三：view-source"><a href="#题目三：view-source" class="headerlink" title="题目三：view_source"></a>题目三：view_source</h2><h3 id="1-2"><a href="#1-2" class="headerlink" title="1."></a>1.</h3><p>进入题目，没有别的信息，根据题目提示可能是寻找另一种方式查看源代码</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231119.png"></p><h3 id="2-2"><a href="#2-2" class="headerlink" title="2."></a>2.</h3><p>F12进入开发者模式，查看代码得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231132.png"></p><h2 id="题目四：get-post"><a href="#题目四：get-post" class="headerlink" title="题目四：get_post"></a>题目四：get_post</h2><h3 id="1-3"><a href="#1-3" class="headerlink" title="1."></a>1.</h3><p>打开链接，发现让我们用GET发送a&#x3D;2，现场学习如何使用GET和POST</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231218.png"></p><h3 id="2-3"><a href="#2-3" class="headerlink" title="2."></a>2.</h3><p>输入&#x2F;?a&#x3D;1后让我们用POST提交b&#x3D;2</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231227.png"></p><h3 id="3-1"><a href="#3-1" class="headerlink" title="3."></a>3.</h3><p>进入开发者模式，这里使用了hackbar，先loadurl，再postdate b&#x3D;2，最后点击Execute执行得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231241.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231251.png"></p><h3 id="题目五：robots"><a href="#题目五：robots" class="headerlink" title="题目五：robots"></a>题目五：robots</h3><h3 id="1-4"><a href="#1-4" class="headerlink" title="1."></a>1.</h3><p>和题目二一样都是考察robots.txt,进入网址输入&#x2F;robots.txt，可以看见flag的文件，打开可得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231312.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231325.png"></p><h2 id="题目六：backup"><a href="#题目六：backup" class="headerlink" title="题目六：backup"></a>题目六：backup</h2><h3 id="1-5"><a href="#1-5" class="headerlink" title="1."></a>1.</h3><p>打开题目，显示“你知道index.php的备份文件名吗”，查看源代码，robots.txt,没有有用信息</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231339.png"></p><h3 id="2-4"><a href="#2-4" class="headerlink" title="2."></a>2.</h3><p>查资料知道php的备份文件是index.php.bak,打开，下载index.php.bak,打开得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231349.png"></p><h2 id="题目七：cookie"><a href="#题目七：cookie" class="headerlink" title="题目七：cookie"></a>题目七：cookie</h2><h3 id="1-6"><a href="#1-6" class="headerlink" title="1."></a>1.</h3><p>打开题目是“你知道什么是cookie吗”，于是打开cookie.php，界面变为，see the response</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231406.png"></p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231418.png"></p><h3 id="2-5"><a href="#2-5" class="headerlink" title="2."></a>2.</h3><p>打开bp进行抓包，在response中得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231428.png"></p><h2 id="题目八：一个不能按的按钮"><a href="#题目八：一个不能按的按钮" class="headerlink" title="题目八：一个不能按的按钮"></a>题目八：一个不能按的按钮</h2><h3 id="1-7"><a href="#1-7" class="headerlink" title="1."></a>1.</h3><p>打开题目，发现flag按钮无法按下，根据题目提示，应该是要想办法让按钮按下，查看网页源代码，发现有disable&#x3D;“”字段，进入开发者工具</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231447.png"></p><h3 id="2-6"><a href="#2-6" class="headerlink" title="2."></a>2.</h3><p>删除disable&#x3D;“”字段，点击按钮，得到flag</p><p><img src="https://raw.githubusercontent.com/maoxiuhuann/Picgo/main/images/20230319231459.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>子夜</title>
      <link href="/post/5e4725d8.html"/>
      <url>/post/5e4725d8.html</url>
      
        <content type="html"><![CDATA[<p><strong>拿到这本书的第一刻便是不好的印象，快递送过来时有明显的压痕，翻开书本一看，密密麻麻的字体实在打击了我阅读的热情，暗自心生不悦。开始阅读感觉到的是枯燥难懂，里面的人名多而杂，让我想起了外国小说那样多的人名。而且主要话题是我不甚了解的民族经济与资本，我在前期看的时候一头雾水，有些不知所云，但其文学性毋庸置疑，茅盾将“子夜”——黎明前最黑暗，最难熬的时段描述的生动详尽。整篇文章描述了以吴荪甫为代表的民族资本家渴望兴起实业，支持国产最后失败破产的经历，我虽不懂经济，但茅盾的文笔将风起云涌，衰落破败，前途灰暗的紧张形势呈现在读者面前，民族资本家们有反扑，抗争，却最后被敌人联合外国资本一步步蚕食直至破产，多次看见胜利的曙光却最后还是失败，读者能够感受到当时环境的煎熬险恶，前途渺茫，这是茅盾对于当时“民族资本家能否救国”的答案。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我是猫</title>
      <link href="/post/28b8f937.html"/>
      <url>/post/28b8f937.html</url>
      
        <content type="html"><![CDATA[<p><strong>以一只猫的视角记录了主人苦沙弥及其朋友的一系列故事，视角新奇而中立，以猫的视角观看人类的活动而做出的评价十分有趣，有时猫的语言可以让你会心一笑，对人们自以为正确正常的事情做出反思。有可能是因为阅读这本书的期间天天早六，我感觉它比较慢热，前期的阅读并没有让我立刻沉迷其中，我会想这是一部无聊的作品，然而到了后面我才领略到它的魅力，印象深刻的从第10章开始，主人公们在谈话中发表自己对于各种问题的看法——生活生命，实业家，对生活的态度……人物性格塑造的十分生动，各有特点，苦沙弥的固执，迷亭君的随性等等，不同的性格使的他们的对话成为了各种观点的碰撞，有时候这样性格迥异的朋友齐聚一堂聊天放松也不失为一种乐趣。当然他们也表现出人类的通性，例如再一次聚会中每个人都争先恐后说出自己自己特殊的遭遇，苦沙弥君为了面子也生硬的憋出一段并不奇特的奇遇，仔细想来也十分有趣。故事结束在猫的失足溺水，一只富有正义感，思想如此深刻的猫，在生与死模糊的界限中理解了生与死，选择了不在挣扎，给我们带来遗憾的同时也让我们对这只猫充满敬意。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写在开头</title>
      <link href="/post/a26ad357.html"/>
      <url>/post/a26ad357.html</url>
      
        <content type="html"><![CDATA[<p><strong>我读书，但我并不研究它，我喜欢阅读小说而完全读不进诗歌和散文，万幸的是我从不看网络小说。我的书单肯定会是自己喜欢的，有可能来自于网上，或者别人的推荐，又或者只是看见封面便来了兴趣，但我都会坚持读完这本书。阅读的乐趣便在于读完一本小说后会根据不同的情况而产生不同的感触，我昏昏沉沉时感觉索然无味，甚至记不起刚刚读过的内容，我看到感兴趣的内容时可能几年后还会回想起大致的情节。我阅读但绝不是因为高雅，而是兴趣所在，怀着这样的心情，我想着从现在开始简短的写下今后阅读的小说的一些感受。之前读过很多书肯定是无法再回想起当时的感受，索性就不写了。可能会觉得有些来不及，但是又想起来一句话：来不及了，就不做了吗？于是我从现在开始。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阅读与我</title>
      <link href="/post/64392601.html"/>
      <url>/post/64392601.html</url>
      
        <content type="html"><![CDATA[<p><strong>我可以说自己是喜欢阅读的。</strong><br><strong>​我与书的结缘来自于初中教材的经典阅读推荐，做梦都不会想到我竟然会完整的阅读完一本那么厚的书，并爱上了阅读的感觉。印象里自己阅读的第一本书是儒勒凡尔纳的《海底两万里》，在此之前，我记得唯一读过的书是为了应付语文阅读笔记作业而随便翻阅了几个章节的《昆虫记》，写到这里不由得想教材上的任何环节自有期存在的意义，正是阅读这本书让我第一次感受到了阅读的乐趣，这样的人类想象力与文学性的结合，即使在技术发达的现在也能让我感到震撼并使我产生了对阅读的渴望。</strong><br><strong>​于是我开始阅读。初中我喜欢看东野圭吾的作品，侦探小说的一环扣一环，各种未知的谜团以及细致自洽的的推理实在是丰富了我无聊的课余生活，这是阅读带给我的感官的刺激。看多了之后，肯定会觉得没有当初那么大的乐趣了，于是我开始涉猎别的类型的书比如:《围城》《活着》……即使现在，我也不能说我能够看懂这些小说，我对历史背景的缺乏、知识的缺乏、经历的缺乏，使我只能片面的感受。但“一千个人心中有一千个哈姆雷特”，只要你阅读了，就一定会有收获。这些书对当时的我来说一定是有 看不懂，但大受震撼 的感觉，但能隐隐约约触动我的心弦，引发我的思考，让我的内心出现一种模模糊糊的想法，这是阅读带给我的朦胧的美感。这期间也读了很多老师口中的杂书，也发现了自己其实只喜欢看小说，并不是所谓的“文艺青年”，但我阅读是为了开心，于是我索性不看别的书。有段时间在我们班上很流行的《明朝那些事》，我不懂历史，不知道其正确性，但以风趣幽默的形式了解了一些故事，以后也可以成为吹牛的谈资吧，阅读拓宽了我的广度。高中的时候就没有初中那样宽松的阅读环境了，晚自习从当初的十点再到十点十五最后到十点半，三年就这样过去了，这时才回忆起初中明明那么空闲却没有多读几本书，也许不管从什么时候回忆都会有遗憾。虽然高中日日夜夜伴随着教科书，但是阅读课外小说仍然是一件顶开心的事情。在高三的日子里，高考的压力伏在我的身上，这个时候阅读便是我最好的调适剂，换位置坐到教室的角落，即使是老师不允许再看小说，我也要读一本小说连续三个小时，深度阅读的时间总是过的很快，我醉心于精妙的情节安排与人物冲突，下课的铃声便响起了，这时候恋恋不舍的合上书本，回到家连入睡的时间都会缩短。反而是高三的书籍阅读的最多，读了很多经典著作如《百年孤独》《霍乱时期的爱情》《红与黑》《局外人》《生死疲劳》……在读马尔克斯的书时，能够切实感受到文字的力量，即使是翻译过来有失真的缺害的情况下，他的文字依旧拥有一种圣洁感，他对文字的运用已臻化境，能够给人一种身心的震撼。同时小说中的人物命途多舛，往往又在文章中揭示出当时时代背景，这时我就会对人物命运，社会原因以及性格原因进行思考，但往往是得不到答案的，因为每个你心中自有答案，便无所谓思考的结果，而是这思考的过程对我们大有裨益，阅读加深了我思考的深度。</strong><br><strong>​阅读是很美好的事情，你的身心随着书中人物的一举一动而忐忑，它带我们历遍不同的风土人情、人性的扭曲与光芒，带给我们思考与感动，带给我们仿佛置身于另一个世界的快乐，这便是所谓的“诗和远方”。关于阅读这件事，我想我会坚持下去，有可能今天不看，明天不看，但我总归有一天会拿起一本书，沉浸在其中一个小时、一个下午又或一个晚上。阅读为我们展示了世界的千姿百态，让我们在这个浮躁的社会中体验不同的人生，按《再见绘黎》中的说法是：给我们的人生增添一股奇幻色彩。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 阅读 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
